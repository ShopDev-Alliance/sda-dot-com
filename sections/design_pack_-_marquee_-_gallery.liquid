{%- comment -%}
{
  "pack_name": "Marquee - images",
  "pack_author": "Design Packs",
  "license": "Â© Design Packs. All rights reserved. This code is protected by copyright law and may not be reproduced, distributed, or used without explicit permission from the author. Shopify complies with the Digital Millennium Copyright Act (DMCA) and responds to claims of copyright infringement using DMCA procedures, which could result in the termination of your Shopify account.",
}
{%- endcomment -%}

{% comment %} Security Code - hides section when app uninstalled {% endcomment %}
{%- unless content_for_header contains 'design_packs_file.js' -%}
  {%- if request.design_mode -%}
    <div class="dsgn-pck__no-app-warning">
      <div class="dsgn-pck__no-app-warning-background">
      </div>
      <div class="dsgn-pck__no-app-warning-text dsgn-pck__rte">
        <p><strong>WARNING!</strong> This section or template will not display properly without the <a href="https://apps.shopify.com/design-packs" target="_blank" rel="nofollow">Design Packs</a> app installed. Please email <a href="mailto:info@design-packs.com" target="_blank">info@design-packs.com</a> with any questions.</p>
      </div>
    </div>
  {%- endif -%}
  {%- break -%}
{%- endunless -%}

{%- comment -%} Assign: Preview section js fix {%- endcomment -%}
{%- assign section_id = section.id | replace: '+', '' -%}

{% comment %} Images: responsive image widths {% endcomment %}
{%- assign widths = '180, 360, 540, 720, 900, 1080, 1296, 1512, 1728, 1950, 2100, 2260, 2450, 2700, 3000, 3350, 3750, 4100' -%}

{%- comment -%} Layout: has user entered measurement value into max-width field? {%- endcomment -%}
{%- if section.settings.max_width contains 'px' or section.settings.max_width contains '%' -%}
  {%- assign max_width = section.settings.max_width -%}
{%- else -%}
  {%- assign max_width = section.settings.max_width | append: 'px' -%}
{%- endif -%}


{%- capture minify -%}
{%- comment -%} CSS {%- endcomment -%}
<style>
/*! Flickity v2.2.2
https://flickity.metafizzy.co
---------------------------------------------- */
.flickity-enabled{position:relative}.flickity-enabled:focus{outline:0;box-shadow: none;}.flickity-viewport{overflow:hidden;position:relative;height:100%}.flickity-slider{position:absolute;width:100%;height:100%}.flickity-enabled.is-draggable{-webkit-tap-highlight-color:transparent;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.flickity-enabled.is-draggable .flickity-viewport{cursor:move;cursor:-webkit-grab;cursor:grab}.flickity-enabled.is-draggable .flickity-viewport.is-pointer-down{cursor:-webkit-grabbing;cursor:grabbing}.flickity-button{position:absolute;background:hsla(0,0%,100%,.75);border:none;color:#333}.flickity-button:hover{background:#fff;cursor:pointer}.flickity-button:focus{outline:0;box-shadow:0 0 0 5px #19f}.flickity-button:active{opacity:.6}.flickity-button:disabled{opacity:.3;cursor:auto;pointer-events:none}.flickity-button-icon{fill:currentColor}.flickity-prev-next-button{top:50%;width:44px;height:44px;border-radius:50%;transform:translateY(-50%)}.flickity-prev-next-button.previous{left:10px}.flickity-prev-next-button.next{right:10px}.flickity-rtl .flickity-prev-next-button.previous{left:auto;right:10px}.flickity-rtl .flickity-prev-next-button.next{right:auto;left:10px}.flickity-prev-next-button .flickity-button-icon{position:absolute;left:20%;top:20%;width:60%;height:60%}.flickity-page-dots{position:absolute;width:100%;bottom:-25px;padding:0;margin:0;list-style:none;text-align:center;line-height:1}.flickity-rtl .flickity-page-dots{direction:rtl}.flickity-page-dots .dot{display:inline-block;width:10px;height:10px;margin:0 8px;background:#333;border-radius:50%;opacity:.25;cursor:pointer}.flickity-page-dots .dot.is-selected{opacity:1}

#DP--{{ section_id }} {
  margin-top: {{ section.settings.outer_margin }}px;
  margin-bottom: {{ section.settings.outer_margin }}px;
  position: relative;
  background: {{ section.settings.background_color }};
  --gap: {{ section.settings.gap }}px;
}

#DP--{{ section_id }} .dsgn-pck__sizer {
  padding-top: {{ section.settings.inner_padding }}px;
  padding-bottom: {{ section.settings.inner_padding }}px;
  width: {{ section.settings.base_width }}%;
  max-width: {{ max_width }};
  z-index: 2;
  position: relative;
}

{%- if section.settings.fade_edges -%}
  #DP--{{ section_id }} .dsgn-pck__sizer .flickity-viewport::after {
    z-index: 1;
    position: absolute;
    content: '';
    display: block;
    pointer-events: none;
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
    background: {{ section.settings.background_color }};
    -webkit-mask-image: linear-gradient(90deg, black, transparent 10%, transparent 90%, black 100%);
    mask-image: linear-gradient(90deg, black, transparent 10%, transparent 90%, black 100%);
  }
{%- endif -%}

#DP--{{ section_id }} .dsgn-pck__background::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: 1;
  background: {{ section.settings.background_color }};
}

@keyframes no-transform {
  0% {
    transform: translate3d(-100%, 0, 0);
  }
  100% {
    transform: translate3d(0%, 0, 0);
  }
}

#DP--{{ section_id }} .dsgn-pck__item {
  display: block;
  height: auto;
  width: calc({{ section.settings.grid_item_width }}% - var(--gap));
  overflow: hidden;
  border-radius: {{ section.settings.border_radius }}px;
  border: {{ section.settings.border_width }}px solid {{ section.settings.border_color }};
  margin-left: calc(var(--gap) / 2);
  margin-right: calc(var(--gap) / 2);
  position: relative;
}

#DP--{{ section_id }} .dsgn-pck__slider {
  --show-arrows: {{ section.settings.show_arrows }};
}

#DP--{{ section_id }} .dsgn-pck__slider:not(.flickity-enabled) {
  opacity: 0;
}

#DP--{{ section_id }} .dsgn-pck__slider.flickity-enabled {
  opacity: 1;
  transition: opacity 0.3s ease-in-out;
}

#DP--{{ section_id }} .flickity-prev-next-button {
  z-index: 2;
}

{%- if section.settings.custom_css != blank -%}
  {%- assign custom_section_declarations = section.settings.custom_css | split: '}' -%}
  {%- for declaration in custom_section_declarations -%}
    {%- if declaration contains '{' -%}
      #DP--{{ section_id }} {{ declaration }} }
    {%- endif -%}
  {%- endfor -%}
{%- endif -%}

/* Landscape phones and down */
@media (max-width: 767px) {
  #DP--{{ section_id }} {
    margin-top: {{ section.settings.outer_margin | times: 0.75 | round: 0 }}px;
    margin-bottom: {{ section.settings.outer_margin | times: 0.75 | round: 0 }}px;
  }

  #DP--{{ section_id }} .dsgn-pck__sizer {
    min-width: 100%;
    padding-top: {{ section.settings.inner_padding | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.inner_padding | times: 0.75 | round: 0 }}px;
  }

  #DP--{{ section_id }} .dsgn-pck__item {
    width: calc({{ section.settings.mobile_grid_item_width }}% - var(--gap));
  }

  {%- if section.settings.mobile_custom_css != blank -%}
    {%- assign mobile_custom_declarations = section.settings.mobile_custom_css | split: '}' -%}
    {%- for declaration in mobile_custom_declarations -%}
      {%- if declaration contains '{' -%}
        #DP--{{ section_id }} {{ declaration }} }
      {%- endif -%}
    {%- endfor -%}
  {%- endif -%}
}

</style>

<section id="DP--{{ section_id }}" class="DP--{{ section_id }} dsgn-pck__marquee-gallery dsgn-pck__section">
  {%- if section.settings.anchor_id != blank -%}
    <div id="{{ section.settings.anchor_id | remove: '#' | handleize }}" class="dsgn-pck__anchor-id" style="height: 0; overflow: hidden;"></div>
  {%- endif -%}
  <div class="dsgn-pck__sizer">
    <div class="dsgn-pck__slider-container dsgn-pck__inner">
      {%- capture marquee_content -%}
        <div class="dsgn-pck__slider" id="slider-{{ section.id }}">
          {%- for block in section.blocks -%}
            {%- comment -%} Images: all placeholders {%- endcomment -%}
            {% capture placeholder_url %}{% cycle "jPochM3HNAo_1080x1620", "HcwIZ7OCqMc_1080x720", "ff0HoIx3PzU_1080x720", "Xh0yiAhVLFA_1080x720", "2H9OUeEO8Hs_1080x1620", "64S6xY_J8BE_1080x720", "MYbaRJyR_Iw" %}{% endcapture %}
            {%- assign placeholder_width = placeholder_url | split: '_' | last | split: 'x' | first -%}
            {%- assign placeholder_height = placeholder_url | split: '_' | last | split: 'x' | last -%}

            {%- comment -%} Images: check image crop aspect ratio {%- endcomment -%}
            {%- if section.settings.image_crop == 'none' -%}
              {%- assign image_crop_width = block.settings.image.width | default: placeholder_width -%}
              {%- assign image_crop_height = block.settings.image.height | default: placeholder_height -%}
            {%- else -%}
              {%- assign image_crop_width = section.settings.image_crop | split: ':' | first | times: 1000 -%}
              {%- assign image_crop_height = section.settings.image_crop | split: ':' | last | times: 1000 -%}
            {%- endif -%}
              <div class="dsgn-pck__item dsgn-pck__block-id-{{ block.id }}" {{ block.shopify_attributes }}>
                {%- if block.settings.link != blank -%}
                  <a {% if block.settings.link != blank %}href="{{ block.settings.link }}"{% else %}href="#"{% endif %}{% if block.settings.external_link %}target="_blank"{% endif %}
                  >
                {% endif %}
                    <div class="dsgn-pck__image__wrapper">
                      <svg class="dsgn-pck__svg-sizer" viewBox="0 0 {{ image_crop_width }} {{ image_crop_height }}"></svg>
                    {%- if block.settings.image != blank -%}
                      {%- capture sizes -%}
                        (max-width: 480px) 100vw, {{ section.settings.base_width | divided_by: section.settings.per_row | append: 'vw' | default: '33vw'}}
                      {%- endcapture -%}
                      {{ block.settings.image | image_url: width: 2800 | image_tag:  widths: widths, sizes: sizes }}
                    {%- else -%}
                      <img src="https://cdn.shopify.com/s/files/1/0577/7673/4361/files/{{ placeholder_url }}.jpg"
                        alt=""
                        loading="lazy"
                        width="{{ placeholder_width }}"
                        height="{{ placeholder_height }}">
                    {%- endif -%}
                  </div>
                {%- if block.settings.link != blank -%}
                  </a>
                {%- endif -%}
              </div>
          {%- endfor -%}
        </div>
      {%- endcapture -%}

      {{ marquee_content }}
    </div>
  </div>
</section>
{%- endcapture -%}
{{ minify | strip_newlines }}

{% schema %}
{
  "name": "Marquee - gallery",
  "class": "dp__marquee-gallery",
  "settings": [
    {
      "type": "range",
      "id": "speed",
      "label": "Speed",
      "min": 0.1,
      "max": 2,
      "default": 1,
      "step": 0.1
    },
    {
      "type": "checkbox",
      "id": "reverse_scrolling",
      "label": "Reverse scrolling",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "scrolling_pause",
      "label": "Pause scrolling on hover",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_arrows",
      "label": "Show arrows",
      "default": false
    },
    {
      "type": "range",
      "id": "grid_item_width",
      "label": "Image width",
      "default": 38,
      "min": 10,
      "max": 100,
      "unit": "%"
    },
    {
      "type": "range",
      "id": "gap",
      "min": 0,
      "max": 40,
      "label": "Spacing gap",
      "unit": "px",
      "default": 10
    },
    {
      "type": "select",
      "id": "image_crop",
      "label": "Image aspect ratio",
      "default": "1:1",
      "options": [
        {
          "value": "16:9",
          "label": "Cinema (16:9)"
        },
        {
          "value": "4:3",
          "label": "Landscape (4:3)"
        },
        {
          "value": "2:3",
          "label": "Portrait (2:3)"
        },
        {
          "value": "1:1",
          "label": "Square (1:1)"
        },
        {
          "value": "none",
          "label": "Original"
        }
      ]
    },
    {
      "type": "header",
      "content": "ð± Mobile"
    },
    {
      "type": "range",
      "id": "mobile_grid_item_width",
      "label": "Mobile slide width",
      "default": 38,
      "min": 10,
      "max": 100,
      "unit": "%"
    },
    {
      "type": "header",
      "content": "ð¨ Design"
    },
    {
      "type": "range",
      "id": "border_radius",
      "label": "Border radius",
      "min": 0,
      "max": 40,
      "step": 1,
      "default": 4,
      "unit": "px"
    },
    {
      "type": "color",
      "id": "border_color",
      "label": "Border",
      "default": "#121212"
    },
    {
      "type": "range",
      "id": "border_width",
      "label": "Border width",
      "min": 0,
      "max": 8,
      "step": 1,
      "default": 1,
      "unit": "px"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background",
      "default": "#ffffff"
    },
    {
      "type": "checkbox",
      "id": "fade_edges",
      "label": "Fade content as it scrolls offscreen. Background color must be set.",
      "default": true
    },
    {
      "type": "header",
      "content": "ð¼ Layout"
    },
    {
      "type": "range",
      "id": "base_width",
      "label": "Size",
      "min": 70,
      "max": 100,
      "step": 5,
      "default": 100,
      "unit": "%"
    },
    {
      "type": "text",
      "id": "max_width",
      "label": "Maximum width",
      "placeholder": "eg. 1200px",
      "info": "Sets width constraint for content."
    },
    {
      "type": "range",
      "id": "inner_padding",
      "label": "Inner padding",
      "info": "Only applies to top and bottom.",
      "min": 0,
      "max": 100,
      "default": 40,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "outer_margin",
      "label": "Outer margin",
      "info": "Only applies to top and bottom.",
      "min": 0,
      "max": 100,
      "default": 0,
      "unit": "px"
    },
    {
      "type": "header",
      "content": "ð¨ Advanced"
    },
    {
      "type": "liquid",
      "id": "custom_css",
      "label": "CSS"
    },
    {
      "type": "liquid",
      "id": "mobile_custom_css",
      "label": "Mobile CSS",
      "info": "Applied on screens less than 480px."
    },
    {
      "type": "text",
      "id": "anchor_id",
      "label": "Link anchor id",
      "placeholder": "#design-pack-section",
      "info": "Enter a unique value to jump to this section from same page using a link or button. Eg. #design-pack-section"
    }
  ],
  "blocks": [
    {
      "type": "image",
      "name": "Image",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Link (optional)"
        },
        {
          "type": "checkbox",
          "id": "external_link",
          "label": "Open link in a new window"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Marquee - gallery ð",
      "settings": {},
      "blocks": [
        {
          "type": "image"
        },
        {
          "type": "image"
        },
        {
          "type": "image"
        },
        {
          "type": "image"
        },
        {
          "type": "image"
        }
      ]
    }
  ]
}
{% endschema %}

{%- comment -%} JSON Settings {%- endcomment -%}
<script type="application/json" data-dsgn-pck="{{ section_id }}">
  {
    "id": {{ section_id | json }},
    "animation": {{ section.settings.animation | json }},
    "enable_parallax": {{ section.settings.enable_parallax | json }},
    "scrolling_pause": {{ section.settings.scrolling_pause | json }},
    "speed": {{ section.settings.speed | json }},
    "reverse_scrolling": {{ section.settings.reverse_scrolling | json }}
  }
</script>
{%- comment -%} External scripts {%- endcomment -%}
<script data-dsgn-pck-external-js="{{ section_id }}" src="https://cdn.shopify.com/s/files/1/0577/7673/4361/files/flickity-2.3.0.pkgd.min.js?v=1671485005" defer></script>
{%- comment -%} JavaScript {%- endcomment -%}
{%- if section.settings.enable_parallax -%}
  <script data-dsgn-pck-external-js="{{ section_id }}" src="https://cdn.shopify.com/s/files/1/0577/7673/4361/files/jarallax.min.js?v=1638490357" defer></script>
{%- endif -%}
{%- comment -%} JavaScript {%- endcomment -%}
<script data-dsgn-pck-js="{{ section_id }}" type="module" defer>
(function(){

  const designPack = {
    settings: {},
    animateSection: function(entries, observer){
      // Target the first entry available.
      let observedSection = entries[0];
      if (observedSection.isIntersecting) {
        observedSection.target.classList.add('dsgn-pck__animation-applied');
      }
    },
    enableParallax: function(section){
      const image = section.querySelector(`.dsgn-pck__parallax-img`);
      jarallax(section, {
        speed: 0.2,
        imgElement: image
      });
    },
    disableParallax: function(section){
      jarallax(section, 'destroy');
    },
    marquee: {
      update: function(section){
        if (designPack.isPaused) return;
        const slider = designPack.slider;
        if (slider && slider.slides) {
          if (designPack.settings.reverse_scrolling == true) {
            slider.x = (slider.x - designPack.tickerSpeed) % slider.slideableWidth;
          } else {
            slider.x = (slider.x + designPack.tickerSpeed) % slider.slideableWidth;
          }
          slider.selectedIndex = slider.dragEndRestingSelect();
          slider.updateSelectedSlide();
          slider.settle(slider.x);
        }
        window.requestAnimationFrame(() => designPack.marquee.update(section));
      },
      pause: () => {
        designPack.isPaused = true;
      },
      play: () => {
        if (designPack.isPaused) {
          designPack.isPaused = false;
          window.requestAnimationFrame(() => designPack.marquee.update());
        }
      }
    },
    load: function(section){


      if (this.settings.animation !== 'none'){
        const options = {
          root: null,
          rootMargin: '0px',
          threshold: [0, 0.25, 0.5, 0.75, 1]
        };
        // Construct Intersection Observer.
        const observer = new IntersectionObserver( this.animateSection, options );
        // Observe if element is present.
        if (section) {
          observer.observe(section);
        }
      }

      if (this.settings.enable_parallax == true){
        this.enableParallax(section);
      }

      const elem = section.querySelector(`#slider-${this.settings.id}`);

      designPack.flkty = new Flickity( elem, {
        autoPlay: false,
        prevNextButtons: JSON.parse(getComputedStyle(elem).getPropertyValue('--show-arrows')),
        pageDots: false,
        draggable: true,
        wrapAround: true,
        selectedAttraction: 0.015,
        friction: 0.25
      });

      // Turn slider into a ticker.
      designPack.slider = designPack.flkty;
      designPack.tickerSpeed = designPack.settings.speed;
      designPack.isPaused = false;
      designPack.slider.x = 0;

      if (designPack.settings.scrolling_pause == true){
        elem.addEventListener('mouseenter', designPack.marquee.pause, false);
        elem.addEventListener('focusin', designPack.marquee.pause, false);
        elem.addEventListener('mouseleave', designPack.marquee.play, false);
        elem.addEventListener('focusout', designPack.marquee.play, false);
      }

      designPack.slider.on('dragStart', () => {
        designPack.isPaused = true;
      });

      designPack.marquee.update(section);
    },
    unload: function(section){
      if (this.settings.enable_parallax == true){
        this.disableParallax(section);
      }
      section.classList.remove('dsgn-pck__animation-applied')
      this.disableSlider(section);
    }
  }

  window.addEventListener('shopify:section:unload', function (e) {
    const settings = document.querySelector(`[data-dsgn-pck="${e.detail.sectionId}"]`);
    const sectionId = e.detail.sectionId;
    const section = document.querySelector(`#DP--${e.detail.sectionId}`);
    if (sectionId == designPack.settings.id){
      designPack.unload(section);
    }
  });

  window.addEventListener('shopify:block:select', function (e) {
    const section = document.querySelector(`#DP--${e.detail.sectionId}`);
    designPack.goToSlide(e.target.dataset.slideshowIndex);
  });

  designPack.settings = JSON.parse(document.querySelector('[data-dsgn-pck="{{ section_id }}"]').innerHTML);
  const sectionId = {{ section_id | json }};
  const section = document.querySelector(`#DP--${sectionId}`);

  if (sectionId == designPack.settings.id){
    designPack.load(section);
  }
})()
</script>
